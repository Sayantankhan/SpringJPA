# ----------------------------------------
# CORE PROPERTIES
# ----------------------------------------
## Enable logs.
debug=false
trace=false
info=false 

# LOGGING
# logging.config= # Location of the logging configuration file. For instance, `classpath:logback.xml` for Logback.
logging.file=E:\\logs\\ELK_SPG_LOGS\\Elatic_Spring.log
logging.file.max-size=10MB
logging.level.org.springframework=INFO,DEBUG,TRACE
logging.pattern.console=%d{dd-MM-yyyy HH:mm:ss.SSS} [%thread] %-5level %logger.%M - %msg%n
logging.pattern.dateformat=yyyy-MM-dd [HH:mm:ss.SSS] 
logging.pattern.file=%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.level=INFO,DEBUG,WARN,ERROR
## Register a shutdown hook for the logging system when it is initialized.
logging.register-shutdown-hook=false 


# IDENTITY (ContextIdApplicationContextInitializer)
## Application name.
spring.application.name=ELK_SPG 

# ----------------------------------------
# WEB PROPERTIES
# ----------------------------------------
# EMBEDDED SERVER CONFIGURATION (ServerProperties)
#server.address=
server.port=8085
#server.connection-timeout=
server.error.path=/error
server.servlet.contextPath=/ELKSPG
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.prefix=Application_access_log
server.tomcat.accesslog.directory=E:\\logs\\ELK_SPG_LOGS\\appLogs
server.tomcat.accesslog.file-date-format=.dd-MM-yyyy
server.tomcat.accesslog.pattern=common

# SPRING MVC (WebMvcProperties)
#spring.mvc.view.prefix= # Spring MVC view prefix.
#spring.mvc.view.suffix= # Spring MVC view suffix.

# ELASTICSEARCH (ElasticsearchProperties)
#spring.data.elasticsearch.cluster-name=elasticsearch # Elasticsearch cluster name.
#spring.data.elasticsearch.cluster-nodes= # Comma-separated list of cluster node addresses.
#spring.data.elasticsearch.properties.*= # Additional properties used to configure the client.
#spring.data.elasticsearch.repositories.enabled=true # Whether to enable Elasticsearch repositories.

# TRANSACTION (TransactionProperties)
#spring.transaction.default-timeout= # Default transaction timeout. If a duration suffix is not specified, seconds will be used.
#spring.transaction.rollback-on-commit-failure= # Whether to roll back on commit failures.

# ENDPOINTS WEB CONFIGURATION (WebEndpointProperties)
management.server.address=127.0.0.1
management.server.port=8089
# management.server.context-path=/ManageApplication
management.endpoints.web.exposure.include=*
# management.endpoints.web.exposure.exclude= 
management.endpoints.web.base-path=/Appmonitoring
# management.endpoints.web.path-mapping= # Mapping between endpoint IDs and the path that should expose them.

# ENDPOINTS CORS CONFIGURATION (CorsEndpointProperties)
## Whether credentials are supported. When not set, credentials are not supported.
# management.endpoints.web.cors.allow-credentials=
## Comma-separated list of headers to allow in a request. '*' allows all headers. 
# management.endpoints.web.cors.allowed-headers= 
## Comma-separated list of methods to allow. '*' allows all methods. When not set, defaults to GET.
# management.endpoints.web.cors.allowed-methods= 
## Comma-separated list of origins to allow. '*' allows all origins. When not set, CORS support is disabled.
# management.endpoints.web.cors.allowed-origins= 
## Comma-separated list of headers to include in a response.
# management.endpoints.web.cors.exposed-headers=
## How long the response from a pre-flight request can be cached by clients. If a duration suffix is not specified, seconds will be used. 
# management.endpoints.web.cors.max-age=1800s 

# ENDPOINTS GENERAL CONFIGURATION
## Whether to enable or disable all endpoints by default
management.endpoints.enabled-by-default=false 

## id by which this endpoint will be accessed over HTTP
## enabled  if true then it can be accessed otherwise not
## sensitive if true then need the authorization to show crucial information over HTTP

# SHUTDOWN ENDPOINT
management.endpoint.shutdown.enabled=true

# HEALTH ENDPOINT (HealthEndpoint, HealthEndpointProperties)
management.endpoint.health.id=/_health
## Maximum time that a response can be cached.
management.endpoint.health.cache.time-to--live=0ms
management.endpoint.health.enabled=true 
management.endpoint.health.sensitive=false
## Roles used to determine whether or not a user is authorized to be shown details. When empty, all authenticated users are authorized.
# management.endpoint.health.roles= 
## When to show full health details.
# management.endpoint.health.show-details=never 

# HTTP TRACE ENDPOINT (HttpTraceEndpoint)
## Maximum time that a response can be cached.
management.endpoint.httptrace.cache.time-to-live=0ms 
management.endpoint.httptrace.enabled=true 

# INFO ENDPOINT (InfoEndpoint)
## Arbitrary properties to add to the info endpoint.
# info= 
management.endpoint.info.cache.time-to-live=0ms
management.endpoint.info.enabled=true 

# LOG FILE ENDPOINT (LogFileWebEndpoint, LogFileWebEndpointProperties)
management.endpoint.logfile.cache.time-to-live=0ms 
management.endpoint.logfile.enabled=true

# ELASTIC HEALTH INDICATORS
# management.health.elasticsearch.enabled=true # Whether to enable Elasticsearch health check.
# management.health.elasticsearch.indices= # Comma-separated index names.
# management.health.elasticsearch.response-timeout=100ms # Time to wait for a response from the cluster.

# HTTP TRACING (HttpTraceProperties)
management.trace.http.enabled=true
management.trace.http.include=RESPONSE_HEADERS,REQUEST_HEADERS,TIME_TAKEN 	

# ----------------------------------------
# SECURITY PROPERTIES
# ----------------------------------------
# SECURITY (SecurityProperties)
#spring.security.user.name=user 
#spring.security.user.password=Sayantan
## Granted roles for the default user name. 
#spring.security.user.roles=ADMIN 

# ----------------------------------------
# DATA PROPERTIES
# ----------------------------------------

# Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
## Whether to stop if an error occurs while initializing the database.
spring.datasource.continue-on-error=false
## Fully qualified name of the JDBC driver. Auto-detected based on the URL by default. 
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url= jdbc:mysql://ec2-18-219-47-188.us-east-2.compute.amazonaws.com:3306/
## Name of the datasource. Default to "testdb" when using an embedded database.
spring.datasource.name=shorturl
spring.datasource.username=sayantan
spring.datasource.password=root

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1
spring.datasource.hikari.connection-timeout=60000
spring.datasource.hikari.maximum-pool-size=5

# JDBC (JdbcProperties)	
## Number of rows that should be fetched from the database when more rows are needed.
# spring.jdbc.template.fetch-size=-1
## Maximum number of rows.
# spring.jdbc.template.max-rows=-1 
## Query timeout. Default is to use the JDBC driver's default configuration.
# spring.jdbc.template.query-timeout= 

# JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)
## Whether to enable JPA repositories.
spring.data.jpa.repositories.enabled=true
# spring.jpa.database=
spring.jpa.hibernate.ddl-auto = update